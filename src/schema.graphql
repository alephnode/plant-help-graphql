type Query {
  info: String!
  plants: [Plant!]!
  users: [User!]!
  categories: [Category!]!
}

type Mutation {
  createPlant(
    name: String!
    description: String!
    frequency: String!
    exposure: String!
    categories: CategoryInput
  ): Plant!
  deletePlant(name: String!): Plant!
  updateUser(
    email: String!
    name: String
    password: String
    plants: PlantInput
  ): User!
  addCategory(name: String!, description: String): Category!
  removeUserPlant(email: String!, name: String!): User!
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}

input PlantInput {
  name: String!
}

input CategoryInput {
  name: String!
}

type Plant {
  id: ID!
  name: String!
  description: String!
  frequency: String!
  exposure: String!
  image: String
  repot: String
  categories: [Category!]
}

type Category {
  id: ID!
  name: String!
  description: String
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  plants: [Plant!]
}

type AuthPayload {
  token: String
  user: User
}
